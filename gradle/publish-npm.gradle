def projectPropertyOrDefault(name, defaultValue) {
    def value = project.properties[name]
    if (value == null) return defaultValue
    return value
}

def distTag(version) {
    def i = version.indexOf('-')
    if (i > 0) return version.substring(i + 1)
    return "latest"
}

def npmTemplateDir = file("$projectDir/js/npm")
def npmDeployDir = file("$buildDir/npm-publication")
def npmDeployTag = distTag(version)

def authToken = projectPropertyOrDefault("NPMJS_TOKEN", "")
def dryRun = projectPropertyOrDefault("dryRun", "false")

// Note: publish transformed files using dependency on sourceSets.main.output
task preparePublishNpm(type: Copy) {
    from(npmTemplateDir) {
        expand(project.properties + [kotlinDependency: "\"kotlin\": \"$kotlin_version\""])
    }
    from(compileKotlinJs.destinationDir)
    into npmDeployDir
}

task publishNpm(type: NpmTask, dependsOn: preparePublishNpm) {
    workingDir = npmDeployDir
    args = ['publish' , "--//registry.npmjs.org/:_authToken=$authToken" , "--tag=$npmDeployTag"]
}

